//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Tobaccos = newTobaccosTable("turbotin", "tobaccos", "")

type tobaccosTable struct {
	mysql.Table

	// Columns
	ID        mysql.ColumnInteger
	CreatedAt mysql.ColumnTimestamp
	UpdatedAt mysql.ColumnTimestamp
	DeletedAt mysql.ColumnTimestamp
	Store     mysql.ColumnString
	Item      mysql.ColumnString
	Link      mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type TobaccosTable struct {
	tobaccosTable

	NEW tobaccosTable
}

// AS creates new TobaccosTable with assigned alias
func (a TobaccosTable) AS(alias string) *TobaccosTable {
	return newTobaccosTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new TobaccosTable with assigned schema name
func (a TobaccosTable) FromSchema(schemaName string) *TobaccosTable {
	return newTobaccosTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new TobaccosTable with assigned table prefix
func (a TobaccosTable) WithPrefix(prefix string) *TobaccosTable {
	return newTobaccosTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new TobaccosTable with assigned table suffix
func (a TobaccosTable) WithSuffix(suffix string) *TobaccosTable {
	return newTobaccosTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newTobaccosTable(schemaName, tableName, alias string) *TobaccosTable {
	return &TobaccosTable{
		tobaccosTable: newTobaccosTableImpl(schemaName, tableName, alias),
		NEW:           newTobaccosTableImpl("", "new", ""),
	}
}

func newTobaccosTableImpl(schemaName, tableName, alias string) tobaccosTable {
	var (
		IDColumn        = mysql.IntegerColumn("id")
		CreatedAtColumn = mysql.TimestampColumn("created_at")
		UpdatedAtColumn = mysql.TimestampColumn("updated_at")
		DeletedAtColumn = mysql.TimestampColumn("deleted_at")
		StoreColumn     = mysql.StringColumn("store")
		ItemColumn      = mysql.StringColumn("item")
		LinkColumn      = mysql.StringColumn("link")
		allColumns      = mysql.ColumnList{IDColumn, CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn, StoreColumn, ItemColumn, LinkColumn}
		mutableColumns  = mysql.ColumnList{CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn, StoreColumn, ItemColumn, LinkColumn}
	)

	return tobaccosTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		CreatedAt: CreatedAtColumn,
		UpdatedAt: UpdatedAtColumn,
		DeletedAt: DeletedAtColumn,
		Store:     StoreColumn,
		Item:      ItemColumn,
		Link:      LinkColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
