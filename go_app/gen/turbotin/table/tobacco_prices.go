//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var TobaccoPrices = newTobaccoPricesTable("turbotin", "tobacco_prices", "")

type tobaccoPricesTable struct {
	mysql.Table

	// Columns
	ID        mysql.ColumnInteger
	CreatedAt mysql.ColumnTimestamp
	UpdatedAt mysql.ColumnTimestamp
	DeletedAt mysql.ColumnTimestamp
	TobaccoID mysql.ColumnInteger
	Price     mysql.ColumnString
	Stock     mysql.ColumnString
	Time      mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type TobaccoPricesTable struct {
	tobaccoPricesTable

	NEW tobaccoPricesTable
}

// AS creates new TobaccoPricesTable with assigned alias
func (a TobaccoPricesTable) AS(alias string) *TobaccoPricesTable {
	return newTobaccoPricesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new TobaccoPricesTable with assigned schema name
func (a TobaccoPricesTable) FromSchema(schemaName string) *TobaccoPricesTable {
	return newTobaccoPricesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new TobaccoPricesTable with assigned table prefix
func (a TobaccoPricesTable) WithPrefix(prefix string) *TobaccoPricesTable {
	return newTobaccoPricesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new TobaccoPricesTable with assigned table suffix
func (a TobaccoPricesTable) WithSuffix(suffix string) *TobaccoPricesTable {
	return newTobaccoPricesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newTobaccoPricesTable(schemaName, tableName, alias string) *TobaccoPricesTable {
	return &TobaccoPricesTable{
		tobaccoPricesTable: newTobaccoPricesTableImpl(schemaName, tableName, alias),
		NEW:                newTobaccoPricesTableImpl("", "new", ""),
	}
}

func newTobaccoPricesTableImpl(schemaName, tableName, alias string) tobaccoPricesTable {
	var (
		IDColumn        = mysql.IntegerColumn("id")
		CreatedAtColumn = mysql.TimestampColumn("created_at")
		UpdatedAtColumn = mysql.TimestampColumn("updated_at")
		DeletedAtColumn = mysql.TimestampColumn("deleted_at")
		TobaccoIDColumn = mysql.IntegerColumn("tobacco_id")
		PriceColumn     = mysql.StringColumn("price")
		StockColumn     = mysql.StringColumn("stock")
		TimeColumn      = mysql.TimestampColumn("time")
		allColumns      = mysql.ColumnList{IDColumn, CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn, TobaccoIDColumn, PriceColumn, StockColumn, TimeColumn}
		mutableColumns  = mysql.ColumnList{CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn, TobaccoIDColumn, PriceColumn, StockColumn, TimeColumn}
	)

	return tobaccoPricesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		CreatedAt: CreatedAtColumn,
		UpdatedAt: UpdatedAtColumn,
		DeletedAt: DeletedAtColumn,
		TobaccoID: TobaccoIDColumn,
		Price:     PriceColumn,
		Stock:     StockColumn,
		Time:      TimeColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
