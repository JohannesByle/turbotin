//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var TobaccoToTags = newTobaccoToTagsTable("turbotin", "tobacco_to_tags", "")

type tobaccoToTagsTable struct {
	mysql.Table

	// Columns
	ID        mysql.ColumnInteger
	CreatedAt mysql.ColumnTimestamp
	UpdatedAt mysql.ColumnTimestamp
	DeletedAt mysql.ColumnTimestamp
	TobaccoID mysql.ColumnInteger
	TagID     mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type TobaccoToTagsTable struct {
	tobaccoToTagsTable

	NEW tobaccoToTagsTable
}

// AS creates new TobaccoToTagsTable with assigned alias
func (a TobaccoToTagsTable) AS(alias string) *TobaccoToTagsTable {
	return newTobaccoToTagsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new TobaccoToTagsTable with assigned schema name
func (a TobaccoToTagsTable) FromSchema(schemaName string) *TobaccoToTagsTable {
	return newTobaccoToTagsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new TobaccoToTagsTable with assigned table prefix
func (a TobaccoToTagsTable) WithPrefix(prefix string) *TobaccoToTagsTable {
	return newTobaccoToTagsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new TobaccoToTagsTable with assigned table suffix
func (a TobaccoToTagsTable) WithSuffix(suffix string) *TobaccoToTagsTable {
	return newTobaccoToTagsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newTobaccoToTagsTable(schemaName, tableName, alias string) *TobaccoToTagsTable {
	return &TobaccoToTagsTable{
		tobaccoToTagsTable: newTobaccoToTagsTableImpl(schemaName, tableName, alias),
		NEW:                newTobaccoToTagsTableImpl("", "new", ""),
	}
}

func newTobaccoToTagsTableImpl(schemaName, tableName, alias string) tobaccoToTagsTable {
	var (
		IDColumn        = mysql.IntegerColumn("id")
		CreatedAtColumn = mysql.TimestampColumn("created_at")
		UpdatedAtColumn = mysql.TimestampColumn("updated_at")
		DeletedAtColumn = mysql.TimestampColumn("deleted_at")
		TobaccoIDColumn = mysql.IntegerColumn("tobacco_id")
		TagIDColumn     = mysql.IntegerColumn("tag_id")
		allColumns      = mysql.ColumnList{IDColumn, CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn, TobaccoIDColumn, TagIDColumn}
		mutableColumns  = mysql.ColumnList{CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn, TobaccoIDColumn, TagIDColumn}
	)

	return tobaccoToTagsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		CreatedAt: CreatedAtColumn,
		UpdatedAt: UpdatedAtColumn,
		DeletedAt: DeletedAtColumn,
		TobaccoID: TobaccoIDColumn,
		TagID:     TagIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
